{"version":3,"sources":["pages/main.js","pages/disclaimer.js","pages/idCollection.js","pages/SeatSelection.js","App.js","registerServiceWorker.js","index.js"],"names":["Main","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","start","inherits","createClass","key","value","_this2","react_default","a","createElement","Redirect","to","className","onClick","setState","Component","Disclaimer","agree","redirect","cancel","color","description","href","target","rel","reactstrap_es","check","type","disabled","setValueHandler","ReaderIDCollection","testURL","valid","readerID","fullURL","fetch","then","response","text","splitString","split","includes","event","fieid","name","change","_this3","onChange","handleChange","placeholder","testVadility","SeatSelection","redirectToAutoSelection","selfSeatSelectionStatus","userID","selfSeatSelection","selfSelectionColor","getRoomEnterSerial","serial","seatViewURL","anatomy","domain","selectJSPPath","serialQuery","openIDQuery","roomNameQuery","roomNameUnknown","yuelanshiIDQuery","firstFloorRoomID","window","open","AutoSeatSelectionPage","_Component2","back","firstPreference","label","secondPreference","thirdPreference","automationStart","isSuccess","failReason","seatOptions","i","isSingle","push","seatOptionsRange","end","monthConverter","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","seatPriority","pause","firstPause","firstStart","searchSeatAndReserveLoop","bind","assertThisInitialized","checkVadility","leaveSeat","firstLog","prevState","creatLogPiece","getCurrntTime","getCurrentHourAndMinute","targetSeat","priority","_this4","reserveSeat","getReserveResult","judgement","judgeReserveResult","isReserveSuccess","reason","_this5","console","log","setTimeout","findAllPossibleSeats","possibleSeats","forEach","seat","length","reservePiece","checkBefore21PM","showMachenismError","callback","_this6","leaveURL","leavePath","getSeatViewURL","splitByLine","line","lineSplit","secondSplit","parseInt","result","today","logRef","document","getElementById","logPiece","textNode","createTextNode","appendChild","insertBefore","seatNum","reservePath","roomIDQuery","seatNumQuery","number","reserveURL","getReserveSeatURL","redirectSite","_this7","serialSplit","resultURL","urlSplit","finalSplit","hour","dateInfo","Date","toString","timeInfo","minute","_this8","vadilityURL","selectSerialPath","_this9","startButtonColor","startButtonText","startButtonDisable","settingNotification","react_select_esm","options","id","loopControlRef","loopStatusRef","buttonRef","removeChild","newStatus","newText","App","condition","obtainListPath","obtainSeatInfoPath","showIDQuery","firstFloorName","setValue","field","siteForRoomEnteringSerial","HashRouter","Switch","Route","exact","path","component","render","routerProps","disclaimer_Disclaimer","assign","idCollection_ReaderIDCollection","SeatSelection_SeatSelection","SeatSelection_AutoSeatSelectionPage","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","src_App_0","URL","process","origin","addEventListener","concat","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f50a2a0e.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport {Redirect} from 'react-router-dom';\n\nexport class Main extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            start: false\n        }\n    }\n\n    render() {\n        if(this.state.start) {\n            return <Redirect to=\"/disclaimer\"/>\n        }\n        return(\n            <div className=\"main-page-container\">\n                \n                <div className=\"full-bloom main-title-item\">\n                    <h1>长春市图书馆智能选座系统</h1> \n                </div>\n                \n\n                <div className=\"main-container\">\n                    <div className=\"main-item full-bloom\"> \n                        <h2 className=\"main-item-title\">快速抢座</h2>\n                        <p>相对于传统的微信选座，本智能选座无反应时间，可以同时抢座，并根据长春市图书馆服务器的更新速度抢座，极大减小失手风险。</p>\n                    </div>\n\n                    <div className=\"main-item full-bloom\"> \n                        <h2 className=\"main-item-title\">智能抢座</h2>\n                        <p>本系统可根据用户的倾向以及当前可以选择的座位进行参考，确保每位使用的用户选到目标座位</p>\n                    </div>\n\n                    <div className=\"main-item full-bloom\"> \n                        <h2 className=\"main-item-title\">自助抢座</h2>\n                        <p>信不过你的设备？自主选座系统可让您提前进入抢座系统，先人一步获得座位。</p>\n                    </div>\n                </div>\n\n                <button className=\"button-item btn btn-primary main-button\" onClick={() => {\n                    this.setState({\n                        start: true\n                    });\n                }}>开始选座</button>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nimport {Redirect} from 'react-router-dom';\n\nimport {FormGroup, Label, Input} from 'reactstrap';\n\nexport class Disclaimer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            agree: false,\n            redirect: false,\n            cancel: false\n        }\n    }\n\n    render() {\n        if(this.state.cancel) {\n            return(<Redirect to=\"/\"/>);\n        }\n        if(this.state.redirect) {\n            return(<Redirect to=\"/id-collecter\"/>);\n        }\n        let color = \"danger\";\n        let description = \"您需勾选“我已阅读免责声明”\"\n        if(this.state.agree) {\n            color = \"success\";\n            description = \"进入智能选座系统\";\n        }\n        return(\n            <div className=\"disclaimer-page-container full-bloom\">\n                <div>\n                    <h1>免责声明</h1>\n                    \n                    <ul className=\"disclaimer-list\"> \n                        <li>您需要首先激活长春市图书馆微信抢座。</li>\n                        <li>您需要开启您浏览器的<a href=\"https://en.wikipedia.org/wiki/Cross-origin_resource_sharing\" target=\"_blank\" rel=\"noopener noreferrer\">跨來源資源共享</a>功能。</li>\n                        <li>此系统并不能100%确保您想要的座位。</li>\n                        <li>此系统可能会根据抢座机制的改变而失效。</li>\n                        <li>根据长春市图书馆规章制度，使用本系统时可能会承担读书卡被禁用的风险。</li>\n                        <li>您需承担免责声明中的所有情况以及尚未提及的所有结果.</li>\n                    </ul>\n\n                    <FormGroup check>\n                        <Label check>\n                            <Input type=\"checkbox\" onClick={() => {\n                                this.setState({\n                                    agree: !this.state.agree\n                                })\n                            }}/>\n                            我已阅读免责声明。\n                        </Label>\n                    </FormGroup>\n                </div>\n\n                <div className=\"disclaimer-button-panel cancel-button\" > \n                    <button className=\"button-item btn btn-primary\" onClick={() => {\n                        this.setState({\n                            cancel: true\n                        });\n                    }}>取消</button>\n\n                    <button disabled={!this.state.agree} className={\"button-item btn btn-\" + color + \" confirm-button\"} onClick={() => {\n                        this.props.setValueHandler(\"condition\", true);\n                        this.setState({\n                            redirect: true\n                        })\n                    }}>{description}</button>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\n\nimport {Redirect} from 'react-router-dom';\n\nexport class ReaderIDCollection extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.testURL = \"http://wx.jlcclib.com/wechat/obtainYlist?openId=of_\"\n\n        this.state = {\n            valid: null,\n            readerID: \"\",\n            redirect: false\n        }\n    }\n\n    testVadility() {\n        let fullURL = this.testURL + this.state.readerID;\n        fetch(fullURL).then((response) => {\n            return response.text();\n        }).then((response) => {\n            // split string by special character (multiple spaces, comma, semicolumn, tab)\n            let splitString = response.split(/[\\s,;\\t\\n]+/);\n            this.setState({\n                valid: splitString.includes(\"openId\")\n            });\n        });\n    }\n\n    handleChange(event) {\n        let value = event.target.value;\n        let fieid = event.target.name;\n        let change = this.state;\n        change[fieid] = value;\n        this.setState(change);\n    }\n\n    // we need clear button!\n    render() {\n        if(!this.props.agree) {\n            return <Redirect to=\"/\" />\n        }\n        if(this.state.redirect) {\n            return <Redirect to=\"/seat-selection\"/>\n        }\n        return(\n            <div className=\"collection-page-container\">\n                <div className=\"full-bloom\">\n                    <div className=\"collection-page-title-panel\" >\n                        <h1>读者序列号检测</h1>\n\n                        <button className=\"button-item btn btn-danger\" onClick={() => {\n                            this.props.setValueHandler(\"condition\", false);\n                        }} >取消</button>\n                    </div>\n                    <div> \n                        {this.state.valid === false &&\n                            <div className=\"alert alert-danger\">此读者序列号为无效序列号</div>\n                        }\n                        {this.state.valid === true &&\n                            <div className=\"alert alert-success\">此读者序列号为有效序列号</div>\n                        }\n                        <div> \n                            <input className=\"form-control\"\n                                name=\"readerID\"\n                                value={this.state.readerID}\n                                onChange={(event) => {\n                                    this.handleChange(event);\n                                    this.setState({\n                                        valid: null\n                                    })\n                                }}\n                                placeholder=\"例如：G7jlCSEOE6r1oXLK2gp1_HlRg\"/>\n                        </div>\n                    </div>\n                    \n                    <div className=\"collection-page-button-panel\">\n                        <button className=\"button-item btn btn-primary\" onClick={() => {\n                            this.testVadility(this.state.readerID);\n                        }}>检测读者序列号</button>\n\n                        <button className=\"button-item btn btn-success\" disabled={!this.state.valid}\n                            onClick={() => {\n                                this.props.setValueHandler(\"userID\", this.state.readerID);\n                                this.setState({\n                                    redirect: true\n                                })\n                            }}\n                        >进入抢座系统</button>\n                    </div>\n                </div>\n\n                <div className=\"full-bloom open-id-wiki\">\n                    <h2>何为读者序列号？</h2>\n                    <p>此序列号是根据您的读书证号所自动产生的一组字符串，您可用该序列号来预约/离开座位。</p>\n                </div>\n\n                <div className=\"full-bloom open-id-help\">\n                    <h2>如何获取读者序列号？</h2>\n                    <ul>\n                        <li>首先在手机中进入您的自修室微信预约程序主菜单。</li>\n                        <li>然后用任意浏览器打开该网站。</li>\n                        <li>观察这个网址，您会发现在\"code=_of\"后有一组字符串。</li>\n                        <li>将这个字符串复制，这就是您的读者序列号。</li>\n                        <li>(在您更换读书证或更改微信绑定帐号时，需重新检查您的读者序列号。)</li>\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport { HashRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\n\n\n// there are two ways for the user to select seats:\n// 1: self-selection system\n//      the user goes into the system before most of other competetors,\n//      and then easily gets the desired seat.\n\n// 2: auto-selection system\n//      this system will based on the user's preference to help selecting the seat\n\n// how to enter those systems:\n// self-selection: once the user clicks the \"进入图书馆选座系统\" button, then the user can enter the seat selection page\n// auto-selection system: the user first clicks the \"进入智能抢座系统\" button, then the user can enter the setting pages,\n// then the system will select seats based on those preferences.\n\n\nexport class SeatSelection extends Component {\n    constructor(props) {\n        super(props);\n        \n        // states:\n        // redirectToAutoSelection: direct to the auto seat selection if it is true\n        this.state = {\n            redirectToAutoSelection: false,\n            selfSeatSelectionStatus: null\n        }\n    }\n    \n    render() {\n        if(!this.props.userID || !this.props.agree) {\n            return <Redirect to=\"/\"/>\n        }\n\n        if(this.state.redirectToAutoSelection) {\n            return <Redirect to=\"/auto-selection\"/>\n        }\n        \n        let selfSeatSelection = \"尚未进入座位预约网站\";\n        let selfSelectionColor = \"bg-secondary text-white\";\n\n        if(this.state.selfSeatSelectionStatus === true) {\n            selfSeatSelection = \"成功进入选座网站\";\n            selfSelectionColor = \"bg-success text-white\";\n        } else if(this.state.selfSeatSelectionStatus === false) {\n            selfSeatSelection = \"读取失败\";\n            selfSelectionColor = \"bg-success text-danger\";\n        }\n\n        return(\n            <div className=\"seat-selection-page-container\">\n                <div className=\"full-bloom seat-selection-page-title-panel\" >\n                    <h1>智能抢座系统。</h1>\n                    <button className=\"button-item btn btn-danger\" onClick={() => {\n                        this.props.setValueHandler(\"userID\", null);\n                        this.props.setValueHandler(\"condition\", false);\n                    }}>退出</button>\n                </div>\n\n                <div className=\"selection-page-options-panel\"> \n                    <div className=\"full-bloom option-item\">\n                        <strong>本选项可让您进入自修室座位阅览网址，允许您先人一步获取想要的座位。</strong>\n                        <ul className=\"warning-list\">请注意\n                            <li>尽管您可以提前进入座位阅览网址，第二日的座位预约的开放时间大约在晚上8点30分10秒到20秒左右。</li>\n                            <li>若您长时间未在微信上登陆（一周），您需在手机上先登陆方可有效。</li>\n                            <li>若您只选到了当天的座位，10秒左右座位会被清空。</li>\n                            <li>若座位阅览网址上显示“系统暂时无法受理，请重新尝试”的话，请刷新网页直到出现座位，但继续刷新会使当前网址失效。</li>\n                        </ul>\n\n                        <div className=\"self-selection-panel\" >\n                            <button className=\"button-item btn btn-primary\" onClick={() => {\n                                this.props.getRoomEnterSerial((serial) => {\n                                    if(serial) {\n                                        let seatViewURL = this.props.anatomy.domain + \"/\" + this.props.anatomy.selectJSPPath + \"?\" + this.props.anatomy.serialQuery\n                                                            + serial + \"&\" + this.props.anatomy.openIDQuery + this.props.userID + \"&\" + this.props.anatomy.roomNameQuery +\n                                                            this.props.anatomy.roomNameUnknown + \"&\" + this.props.anatomy.yuelanshiIDQuery + this.props.anatomy.firstFloorRoomID;\n                                        window.open(seatViewURL, '_blank');\n                                        this.setState({\n                                            selfSeatSelectionStatus: true\n                                        })\n                                    } else {\n                                        this.setState({\n                                            selfSeatSelectionStatus: false\n                                        })\n                                    }\n                                });    \n                            }}>开始自助选座</button>\n                            <div className={selfSelectionColor + \" seat-self-selection-status\"}>{\"状态：\" + selfSeatSelection}</div>\n                        </div>\n                    </div>\n\n                    <div className=\"full-bloom option-item\">\n                        <div> \n                            <strong>本选项可根据您的座位倾向，使本系统为您选择座位。</strong>\n                            <ul className=\"warning-list\">请注意 \n                                <li>若您长时间未在微信上登陆（一周），您需在手机上先登陆方可有效。</li>\n                                <li>抢座系统有抢不到座位的风险，使用时须谨慎。</li>\n                            </ul>\n                        </div> \n                        <button className=\"button-item btn btn-primary\" onClick={() => {\n                            this.setState({\n                                redirectToAutoSelection: true\n                            })\n                        }}>自动选座系统</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\n// test: K7jqkljf7t_mngoLy9edHTQq4\n\n// test2: K7jlCSEOE8r1oXHL2gp1_HlRg\nexport class AutoSeatSelectionPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            back: false,\n            firstPreference: {label: \"无\", value: \"\"},\n            secondPreference: {label: \"无\", value: \"\"},\n            thirdPreference: {label: \"停止抢座\", value: \"\"},\n            automationStart: false,\n\n            isSuccess: false,\n            failReason: null\n        }\n\n        this.seatOptions = [{label: \"无\", value: \"\"}];\n        for(let i = 1; i <= 208; i++) {\n            let label = i + \" (\"\n            if(this.isSingle(i)) {\n                label += \"单座\" + \")\"\n            } else {\n                label += \"双座\" + \")\"\n            }\n            this.seatOptions.push(\n                {label: label, value: i}\n            );\n        }\n\n        this.seatOptionsRange = [{label: \"无\", value: \"\"}];\n        for(let i = 1; i <= 20; i++) {\n            let start = (i - 1) * 10 + 1;\n            let end = i * 10;\n            this.seatOptionsRange.push({\n                label: start + \" ~ \" + end,\n                value: {start: start, end: end}\n            });\n        }\n\n        this.monthConverter = {\n            Jan: \"01\", Feb: \"02\", Mar: \"03\",\n            Apr: \"04\", May: \"05\", Jun: \"06\",\n            Jul: \"07\", Aug: \"08\", Sep: \"09\",\n            Oct: \"10\", Nov: \"11\", Dec: \"12\"\n        }\n\n        this.seatPriority = null;\n        this.pause = false;\n        this.firstPause = false;\n        this.firstStart = false;\n\n        this.seatOptionsRange.push({label: 201 + \" ~ \" + 208, value: {start: 201, end: 208}});\n        \n        this.searchSeatAndReserveLoop = this.searchSeatAndReserveLoop.bind(this);\n        this.checkVadility = this.checkVadility.bind(this);\n        this.leaveSeat = this.leaveSeat.bind(this);\n\n        this.firstLog = null;\n    }\n\n    // test: K7jlCSEOE8r1oXHL2gp1_HlRg\n    componentDidUpdate(prevState) {\n        if(this.state.automationStart && (this.state.automationStart !== prevState.automationStart)) {\n            this.creatLogPiece(this.getCurrntTime() + \" --- 开始预约\");\n            let currentTime = this.getCurrentHourAndMinute();\n            if(/*currentTime.hour >= 20 && currentTime.minute >= 20*/ true) {\n                this.searchSeatAndReserveLoop();\n            } else {\n                this.creatLogPiece(this.getCurrntTime() + \" --- 当前时间不能进行预约座位\");\n                this.creatLogPiece(this.getCurrntTime() + \" --- 请于20点20分后打开该程序\");\n                this.creatLogPiece(\"请点击终止预约按钮\");\n            }\n        }\n    }\n\n    reservePiece(targetSeat, priority) {\n        this.creatLogPiece(this.getCurrntTime() + \" --- 找到目标\");\n        this.creatLogPiece(this.getCurrntTime() + \" --- 开始预约第\" + targetSeat + \"号座位 （第\" + priority + \"目标）\");\n        this.reserveSeat(targetSeat, (response) => {\n            this.getReserveResult(response, (response) => {\n                let judgement = this.judgeReserveResult(response);\n                if(!judgement.isReserveSuccess) {\n                    this.creatLogPiece(this.getCurrntTime() + \" --- 因为\" + judgement.reason + \", 预约失败\");\n                    if(judgement.reason !== \"仅预约当天座位\") {\n                        if(this.state.automationStart) {\n                            this.searchSeatAndReserveLoop();\n                        }\n                    } else {\n                        this.creatLogPiece(this.getCurrntTime() + \" --- 开始离开座位\");\n                        this.leaveSeat(() => this.searchSeatAndReserveLoop());\n                    }\n                } else {\n                    this.creatLogPiece(this.getCurrntTime() + \" --- 成功预约第二天座位\");\n                    if(priority === 1) {\n                        this.creatLogPiece(this.getCurrntTime() + \" --- 第1目标完成，任务结束\");\n                        this.creatLogPiece(\"请点击终止预约按钮\");\n                    } else {\n                        this.creatLogPiece(this.getCurrntTime() + \" --- 第\" + priority + \"目标完成，继续抢座\");\n                        this.seatPriority = priority;\n                        this.searchSeatAndReserveLoop();\n                    }\n                }\n            });\n        })\n    }\n\n    // test REAL! : K7jkgpyHxQQISesAWzGx53DfU\n    searchSeatAndReserveLoop() {\n        if(this.pause) {\n            console.log(\"paused\");\n            setTimeout(() => {\n                if(this.firstPause) {\n                    this.creatLogPiece(this.getCurrntTime() + \" --- 开始停止自动预约系统\");\n                    this.creatLogPiece(this.getCurrntTime() + \" ---------------------\");\n                    this.creatLogPiece(this.getCurrntTime() + \" --- 暂停成功\");\n                    this.firstPause = false;\n                    setTimeout(() => {\n                        this.searchSeatAndReserveLoop();\n                    });\n                }\n                if(!this.firstStart) {\n                    this.creatLogPiece(this.getCurrntTime() + \" --- 暂停中\");\n                }\n                this.searchSeatAndReserveLoop();\n            }, 3000);\n        } else {\n            if(this.firstStart) {\n                this.firstStart = false;\n                this.creatLogPiece(this.getCurrntTime() + \" ---------------------\");\n                this.creatLogPiece(this.getCurrntTime() + \" --- 重新开始自动预约系统\");\n            }\n            this.creatLogPiece(this.getCurrntTime() + \" --- 开始搜索座位\");\n            this.props.getRoomEnterSerial((serial) => {\n                if(!serial) {\n                    this.showMachenismError();\n                } else {\n                    this.findAllPossibleSeats(serial, (possibleSeats) => {\n                        let targetSeat = null;\n                        let priority = null;\n                        if(this.state.firstPreference.value !== \"\") {\n                            if(possibleSeats.includes(this.state.firstPreference.value)) {\n                                targetSeat = this.state.firstPreference.value;\n                                priority = 1;\n                            }\n                        }\n                        if(targetSeat === null && this.state.secondPreference.value !== \"\") {\n                            for(let start = this.state.secondPreference.value.start; \n                                    start <= this.state.secondPreference.value.end; start++) {\n                                if(possibleSeats.includes(start)) {\n                                    targetSeat = start;\n                                    priority = 2;\n                                }\n                            }\n                        }\n                        if(targetSeat === null && this.state.thirdPreference.value !== \"\") {\n                            if(this.state.thirdPreference.value === \"single\") {\n                                possibleSeats.forEach((seat) => {\n                                    if(this.isSingle(seat)) {\n                                        console.log(\"call\");\n                                        targetSeat = seat;\n                                        priority = 3;\n                                    }\n                                });\n                            } else if (this.state.thirdPreference.value === \"double\") {\n                                possibleSeats.forEach((seat) => {\n                                    if(!this.isSingle(seat)) {\n                                        targetSeat = seat;\n                                        priority = 3;\n                                    }\n                                });\n                            } else {\n                                if(possibleSeats.length > 0) {\n                                    targetSeat = possibleSeats[0];\n                                    priority = 3;\n                                }\n                            }\n                        }\n                        console.log(\"target : \" + targetSeat);\n                        console.log(\"priority : \" + priority);\n                        if(targetSeat && (this.seatPriority === null || priority < this.seatPriority)) {\n                            if(this.seatPriority && priority < this.seatPriority) {\n                                this.seatPriority = null;\n                                this.leaveSeat(() => {\n                                    this.reservePiece(targetSeat, priority);\n                                });\n                            } else {\n                                this.reservePiece(targetSeat, priority);\n                            }\n                        } else {\n                            this.creatLogPiece(this.getCurrntTime() + \" --- 尚未出现目标座位\");\n                            if(this.state.thirdPreference.value === \"\") {\n                                this.creatLogPiece(this.getCurrntTime() + \" --- 因为失去目标，本系统停止预约座位\");\n                                this.creatLogPiece(\"请点击终止预约按钮\");\n                            } else {\n                                if(this.checkBefore21PM() && this.state.automationStart) {\n                                    this.creatLogPiece(this.getCurrntTime() + \" --- 重新开始搜索座位\");\n                                    this.searchSeatAndReserveLoop();\n                                }\n                            }\n                        }\n                    });\n                    \n                }\n            });\n        }\n    }\n\n    leaveSeat(callback) {\n        let leaveURL = this.props.anatomy.domain + \"/\" + this.props.anatomy.leavePath \n                        + \"?\" + this.props.anatomy.openIDQuery + this.props.userID;\n        fetch(leaveURL).then((response) => {\n            return response.text();\n        }).then((response) => {\n            if(response.includes(\"取消预定！\") || response.includes(\"阅览室：无信息！\")) {\n                this.creatLogPiece(this.getCurrntTime() + \" --- 离开座位成功\");\n                if(this.state.automationStart) {\n                    callback();\n                }\n            } else {\n                this.creatLogPiece(this.getCurrntTime() + \" --- 离开座位失败\");\n                this.creatLogPiece(this.getCurrntTime() + \" --- 重新尝试离开座位\");\n                this.leaveSeat(callback);\n            }\n        });\n    }\n\n\n    findAllPossibleSeats(serial, callback) {\n        fetch(this.getSeatViewURL(serial)).then((response) => {\n            return response.text();\n        }).then((response) => {\n            let splitByLine = response.split(\"\\n\");\n            let possibleSeats = [];\n            splitByLine.forEach((line) => {\n                if(line.includes(\"onclick=\\\"dianji(\")) {\n                    let lineSplit = line.split(\">\");\n                    if(lineSplit[1]) {\n                        let secondSplit = lineSplit[1].split(\"<\");\n                        if(secondSplit[0]) {                    \n                            possibleSeats.push(parseInt(secondSplit[0], 10));\n                        }\n                    }\n                }\n            });\n            console.log(possibleSeats);\n            callback(possibleSeats);\n        });\n    }\n\n    judgeReserveResult(result) {\n        if(result.includes(\"您的位置在\")) {\n            return ({\n                isReserveSuccess: false,\n                reason: \"当天座位尚未解除\"\n            })\n        } else if(result.includes(\"终端机刷卡\")) {\n            let today = this.getCurrntTime().split(\" \")[0];\n            console.log(today);\n            if(result.includes(today)) {\n                return({\n                    isReserveSuccess: false,\n                    reason: \"仅预约当天座位\"\n                });\n            } else {\n                return({\n                    isReserveSuccess: true,\n                    reason: \"成功预约第二天座位\"\n                })\n            }\n        } else if(result.includes(\"排队\")) {\n            return({\n                isReserveSuccess: false,\n                reason: \"正在预约其他座位\"\n            });\n        } else if(result.includes(\"该座位已经被预约\")) {\n            return({\n                isReserveSuccess: false,\n                reason: \"该座位已经被他人预约\"\n            });\n        } else if(result.includes(\"已预约\" /*not sure*/)) {\n            return({\n                isReserveSuccess: false,\n                reason: \"您已经成功预约座位\"\n            })\n        } else {\n            this.showMachenismError();\n            return(null);\n        }\n    }\n\n    creatLogPiece(text) {\n        let logRef = document.getElementById(\"reservation-log\");\n        if(logRef) {\n            let logPiece = document.createElement('li');\n            let textNode = document.createTextNode(text);\n            logPiece.appendChild(textNode);\n            if(!this.firstLog) {\n                logRef.appendChild(logPiece);\n            } else {\n                logRef.insertBefore(logPiece, this.firstLog);\n            }\n            this.firstLog = logPiece;\n        }\n    }\n\n    getReserveSeatURL(seatNum) {\n        return this.props.anatomy.domain + \"/\" + this.props.anatomy.reservePath + \"?\"\n                    + this.props.anatomy.roomIDQuery + this.props.anatomy.firstFloorRoomID + \"&\" \n                    + this.props.anatomy.openIDQuery + this.props.userID + \"&\" \n                    + this.props.anatomy.seatNumQuery + seatNum;\n    }\n\n    getSeatViewURL(serial) {\n        return this.props.anatomy.domain + \"/\" + this.props.anatomy.selectJSPPath + \"?\" + this.props.anatomy.serialQuery\n                    + serial + \"&\" + this.props.anatomy.openIDQuery + this.props.userID + \"&\" + this.props.anatomy.roomNameQuery +\n                    this.props.anatomy.roomNameUnknown + \"&\" + this.props.anatomy.yuelanshiIDQuery + this.props.anatomy.firstFloorRoomID;\n    }\n\n    isSingle(number) {\n        return (number >= 89 && number <= 110) || (number >= 191 && number <= 208);\n    }\n\n    // this piece will reserve the seat of first preference and then pass the result URL into callback function\n    reserveSeat(seatNum, callback) {\n        let reserveURL = this.getReserveSeatURL(seatNum);\n        console.log(reserveURL);\n        fetch(reserveURL).then((response) => {\n            return response.text();\n        }).then((response) => {\n            console.log(response);\n            callback(response);\n        });\n    }\n\n    // this piece will process the result and then pass the result into next function\n    getReserveResult(redirectSite, callback) {\n        let serialSplit = redirectSite.split(\"serialNo=\");\n        if(serialSplit[1]) {\n            this.checkVadility(serialSplit[1], () => {\n                let resultURL = this.props.anatomy.domain + \"/\" + this.props.anatomy.selectJSPPath + \"?\" \n                                    + this.props.anatomy.serialQuery + serialSplit[1];\n                fetch(resultURL).then((response) => {\n                    return response.text();\n                }).then((response) => {\n                    // result page\n                    let urlSplit = response.split(\"<a href=\\\"\\\" class=\\\"\\\" \");\n                    if(urlSplit[1]) {\n                        let nextSplit = urlSplit[1];\n                        let secondSplit = nextSplit.split(\"</a>\");\n                        if(secondSplit[0]) {\n                            let finalSplit = secondSplit[0].split(\">\");\n                            if(finalSplit[1]) {\n                                let result = finalSplit[1];\n                                console.log(result);\n                                callback(result);\n                            } else {\n                                this.showMachenismError();\n                            }\n                        } else {\n                            this.showMachenismError();\n                        }\n                    } else {\n                        this.showMachenismError();\n                    }\n                }); \n            });\n        } else {\n            this.showMachenismError();\n        }\n    }\n\n    showMachenismError() {\n        this.creatLogPiece(\"因预约座位机制改变，本系统已经失效\");\n        this.creatLogPiece(\"请点击终止预约按钮\");\n    }\n\n    checkBefore21PM() {\n        let timeInfo = this.getCurrentHourAndMinute()\n        if(timeInfo.hour < 21) {\n            return true;\n        } else {\n            this.creatLogPiece(\"因已经过21点，继续预约已无意义，因此停止预约。\");\n            this.creatLogPiece(\"请点击取消按钮\");\n            return false;\n        }\n    }\n\n\n    // this will return the current time as following format (all in numbers):\n    // \"full year/month/day hour/minute/second\" \n    getCurrntTime() {\n        let now = new Date();\n        let nowToString = now.toString();\n        let dateInfo = nowToString.split(\" \");\n\n        let currentTime = dateInfo[3] + \"-\" + this.monthConverter[dateInfo[1]] + \"-\" + dateInfo[2]\n                            + \" \" + dateInfo[4]\n\n        return currentTime;\n    }\n\n    getCurrentHourAndMinute() {\n        let now = new Date();\n        let nowToString = now.toString();\n        let dateInfo = nowToString.split(\" \");\n        let timeInfo = dateInfo[4].split(\":\");\n        return({hour: timeInfo[0], minute: timeInfo[1]});\n    }\n\n    checkVadility(serial, callback) {\n        let vadilityURL = this.props.anatomy.domain + \"/\" + this.props.anatomy.selectSerialPath + \"?\" \n                            + this.props.anatomy.serialQuery + serial;\n        fetch(vadilityURL).then((response) => {\n            return response.text()\n        }).then((response) => {\n            console.log(response);\n            if(response === \"no\") {\n                this.checkVadility(serial, callback);\n            } else {\n                callback();\n            }\n        })\n    }\n\n\n\n    // Setting part\n    // first: the most desired seat (only 1)\n    // preference: single or double\n    // if all impossible: random get seats or stop loop\n\n    // way of seat selection\n    // no count registration: register by preference, once find invalid, then quit\n    // count registration: register by preference, once reserved, then if the upper are failed\n    // then try those seats\n\n\n\n    // Status part\n    render() {\n        if(!this.props.userID || !this.props.agree) {\n            return <Redirect to=\"/\"/>\n        }\n\n        if(this.state.back) {\n            return <Redirect to=\"/seat-selection\" />\n        }\n\n        let startButtonColor = \"button-item btn btn-primary\";\n        let startButtonText = \"请选择您想要的座位\"\n        let startButtonDisable = this.state.firstPreference.value === \"\" && \n                                 this.state.secondPreference.value === \"\" && \n                                 this.state.thirdPreference.value === \"\";\n        let settingNotification = \"设定\";\n        if(this.state.automationStart) {\n            settingNotification = \"\";\n        }\n\n        if(!startButtonDisable) {\n            startButtonColor = \"button-item btn btn-success\";\n            startButtonText = \"开始抢座\";\n        }\n        return(\n            <div className=\"auto-selection-page\"> \n                <div className=\"full-bloom\" > \n                    <h1>{\"自动选座设定\" + settingNotification}</h1>\n\n                    <button className=\"button-item btn btn-danger\" onClick={() => {\n                        this.setState({\n                            back: true,\n                            automationStart: false\n                        })\n                        this.pause = false;\n                        this.firstPause = false;\n                        this.firstStart = false;\n                    }}>返回</button>\n                </div>\n                {!this.state.automationStart &&\n                    <div className=\"full-bloom automation-middle-part\" > \n                        <div className=\"auto-option-item\" > \n                            <h2>请选择您最想要的一个座位</h2>\n                            <Select name=\"firstPreference\"\n                                options={this.seatOptions}\n                                value={this.state.firstPreference}\n                                onChange={(event) => {\n                                    this.setState({\n                                        firstPreference: event\n                                    })\n                                }}\n                            />\n                        </div>\n\n                        <div className=\"auto-option-item\"> \n                            <h2>其次，请选择您可以接受的座位范围</h2>\n                                <Select name=\"secondPreference\"\n                                    options={this.seatOptionsRange}\n                                    value={this.state.secondPreference}\n                                    onChange={(event) => {\n                                        this.setState({\n                                            secondPreference: event\n                                        })\n                                    }}\n                            />\n                        </div>\n\n                        <div className=\"auto-option-item\"> \n                            <h2>若上述座位均无法获得，请选择可接受的座位的类型</h2>\n                                <Select name=\"thirdPreference\"\n                                    options={[\n                                        {label: \"停止抢座\", value: \"\"},\n                                        {label: \"任意座位\", value: \"any\"},\n                                        {label: \"任意单座\", value: \"single\"},\n                                        {label: \"任意双座\", value: \"double\"}\n                                    ]}\n                                    value={this.state.thirdPreference}\n                                    onChange={(event) => {\n                                        this.setState({\n                                            thirdPreference: event\n                                        })\n                                    }}\n                            />\n                        </div>\n                    </div>\n                }\n                {this.state.automationStart && \n                    <div className=\"full-bloom\"> \n                        <ul>当前指示：\n                            <li>{\"首要目标-\" + this.state.firstPreference.label}</li>\n                            <li>{\"次要目标-\" + this.state.secondPreference.label}</li>\n                            <li>{\"座位类型倾向：\" + this.state.thirdPreference.label}</li>\n                        </ul>\n\n                        <h2>预约状态目录：</h2>\n                        <ul id=\"reservation-log\"></ul>\n                    </div>\n                }\n                <div>\n                    {!this.state.automationStart && \n                        <button className={startButtonColor + \" auto-start-button\"} disabled={startButtonDisable} onClick={() => {\n                            this.setState({\n                                automationStart: true\n                            })\n                            this.pause = false;\n                        }}>{startButtonText}</button>\n                    }\n                    {this.state.automationStart && \n                        <div>\n                             \n                             <div id=\"loop-control-button\"> \n                                 <div id=\"loop-control-status\">暂停</div>\n                                 <button id=\"loop-button\"  className=\"button-item btn btn-primary\" onClick={() => {\n                                    let loopControlRef = document.getElementById(\"loop-control-button\");\n                                    let loopStatusRef = document.getElementById(\"loop-control-status\");\n                                    let buttonRef = document.getElementById(\"loop-button\");\n                                    if(!this.pause) {\n                                        this.firstPause = true;\n                                        this.pause = true;\n                                        this.firstStart = false;\n                                        loopControlRef.removeChild(loopStatusRef);\n                                        let newStatus = document.createElement(\"div\");\n                                        newStatus.id = \"loop-control-status\";\n                                        let newText = document.createTextNode(\"开始\");\n                                        newStatus.appendChild(newText);\n                                        loopControlRef.insertBefore(newStatus, buttonRef);\n                                        this.creatLogPiece(this.getCurrntTime() + \" --- 开始暂停自动预约系统\");\n                                    } else {\n                                        this.firstStart = true;\n                                        this.firstPause = false;\n                                        this.pause = false;\n                                        loopControlRef.removeChild(loopStatusRef);\n                                        let newStatus = document.createElement(\"div\");\n                                        newStatus.id = \"loop-control-status\";\n                                        let newText = document.createTextNode(\"暂停\");\n                                        newStatus.appendChild(newText);\n                                        loopControlRef.insertBefore(newStatus, buttonRef);\n                                    }\n                                 }} >点我</button>\n                             </div>\n                            \n\n                            <button className=\"button-item btn btn-danger auto-end-button\" onClick={() => {\n                                this.setState({\n                                    automationStart: false\n                                })\n                                this.pause = false;\n                                this.firstPause = false;\n                                this.firstStart = false;\n                                this.firstLog = false;\n                            }}>终止预约</button>\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\n\nimport './App.css';\n\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport {Main} from './pages/main';\nimport {Disclaimer} from './pages/disclaimer';\nimport {ReaderIDCollection} from './pages/idCollection';\nimport {SeatSelection} from './pages/SeatSelection';\nimport {AutoSeatSelectionPage} from './pages/SeatSelection';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      condition: false,\n      userID: null\n    }\n    \n    this.anatomy = {\n      domain: \"http://wx.jlcclib.com/wechat\",\n\n      obtainListPath: \"obtainYlist\",\n      obtainSeatInfoPath: \"obtainAllSeatInfo\",\n      selectSerialPath: \"selectSerialNo\",\n      selectJSPPath: \"selectSerialNoToJsp\",\n      reservePath: \"reserve\",\n      leavePath: \"leave\",\n\n      roomIDQuery: \"id=\",\n      roomNameQuery: \"name=\",\n      openIDQuery: \"openId=of_\",\n      serialQuery: \"serialNo=\",\n      yuelanshiIDQuery: \"yuelanshiId=\",\n      showIDQuery: \"id=\",\n      seatNumQuery: \"seatno=\",\n\n      firstFloorRoomID: \"402881b14586df4a014586e28aae0000\",\n      firstFloorName: \"一楼读者自修区\",\n      roomNameUnknown: \"???????\"\n    }\n\n    this.setValueHandler = this.setValue.bind(this);\n\n    this.getRoomEnterSerial = this.getRoomEnterSerial.bind(this);\n  }\n\n  setValue(field, value) {\n    let state = this.state;\n    state[field] = value;\n    this.setState(state);\n  }\n\n  // test: K7jqkljf7t_mngoLy9edHTQq4\n\n  // this function will find the serial number for the page to see all seats\n  // once the serve has registered this serial\n  getRoomEnterSerial(callback) {\n    if(this.state.userID) {\n      let siteForRoomEnteringSerial = this.anatomy.domain + \"/\" + this.anatomy.obtainSeatInfoPath + \"?\" + this.anatomy.roomIDQuery \n                                      + this.anatomy.firstFloorRoomID + \"&\" + this.anatomy.openIDQuery + this.state.userID + \"&\" \n                                      + this.anatomy.roomNameQuery + this.anatomy.firstFloorName;\n      fetch(siteForRoomEnteringSerial).then((response) => {\n        return response.text();\n      }).then((response) => {\n        console.log(response);\n        let serial = response.split(\"serialNo=\");\n        if(serial[1]) {\n          this.checkVadility(serial[1], callback);\n        } else {\n          callback(null);\n        }\n      });\n    } else {\n      callback(null);\n    }\n  }\n\n\n  // three states\n  checkVadility(serial, callback) {\n    let vadilityURL = this.anatomy.domain + \"/\" + this.anatomy.selectSerialPath + \"?\" \n                        + this.anatomy.serialQuery + serial;\n    console.log(vadilityURL);\n    fetch(vadilityURL).then((response) => {\n        return response.text()\n    }).then((response) => {\n        console.log(response);\n        if(response === \"no\") {\n            this.checkVadility(serial, callback);\n        } else {\n            callback(serial);\n        }\n    })\n  }\n\n  render() {\n    return (\n      <Router> \n        <Switch>\n          <Route exact path=\"/\" component={Main} />\n          <Route path=\"/disclaimer\" render={(routerProps) => {\n            return <Disclaimer {...routerProps} setValueHandler={this.setValueHandler}/>;\n          }} />\n          <Route path=\"/id-collecter\" render={(routerProps) => {\n            return <ReaderIDCollection {...routerProps} setValueHandler={this.setValueHandler} agree={this.state.condition}/>;\n          }} />\n          <Route path=\"/seat-selection\" render={(routerProps) => {\n            return <SeatSelection {...routerProps} setValueHandler={this.setValueHandler}  \n                                    userID={this.state.userID} agree={this.state.condition}\n                                    getRoomEnterSerial={this.getRoomEnterSerial} anatomy={this.anatomy}\n            />;\n          }} />\n          <Route path= {\"/auto-selection\"} render={(routerProps) => {\n            return <AutoSeatSelectionPage {...routerProps} \n              userID={this.state.userID} setValueHandler={this.setValueHandler} agree={this.state.condition} \n                      anatomy={this.anatomy} getRoomEnterSerial={this.getRoomEnterSerial}/>\n          }}/>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}