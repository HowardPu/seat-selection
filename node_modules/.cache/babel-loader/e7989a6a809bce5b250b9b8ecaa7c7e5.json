{"ast":null,"code":"import _classCallCheck from \"/Users/HowardPu/Documents/academic/info/info 343/new repo/seat-selection/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/HowardPu/Documents/academic/info/info 343/new repo/seat-selection/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/HowardPu/Documents/academic/info/info 343/new repo/seat-selection/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/HowardPu/Documents/academic/info/info 343/new repo/seat-selection/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/HowardPu/Documents/academic/info/info 343/new repo/seat-selection/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/HowardPu/Documents/academic/info/info 343/new repo/seat-selection/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/HowardPu/Documents/academic/info/info 343/new repo/seat-selection/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Main } from './pages/main';\nimport { Disclaimer } from './pages/disclaimer';\nimport { ReaderIDCollection } from './pages/idCollection';\nimport { SeatSelection } from './pages/SeatSelection';\nimport { AutoSeatSelectionPage } from './pages/SeatSelection';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      condition: false,\n      userID: null\n    };\n    _this.anatomy = {\n      domain: \"http://wx.jlcclib.com/wechat\",\n      obtainListPath: \"obtainYlist\",\n      obtainSeatInfoPath: \"obtainAllSeatInfo\",\n      selectSerialPath: \"selectSerialNo\",\n      selectJSPPath: \"selectSerialNoToJsp\",\n      reservePath: \"reserve\",\n      leavePath: \"leave\",\n      roomIDQuery: \"id=\",\n      roomNameQuery: \"name=\",\n      openIDQuery: \"openId=of_\",\n      serialQuery: \"serialNo=\",\n      yuelanshiIDQuery: \"yuelanshiId=\",\n      showIDQuery: \"id=\",\n      seatNumQuery: \"seatno=\",\n      firstFloorRoomID: \"402881b14586df4a014586e28aae0000\",\n      firstFloorName: \"一楼读者自修区\",\n      roomNameUnknown: \"???????\"\n    };\n    _this.setValueHandler = _this.setValue.bind(_assertThisInitialized(_this));\n    _this.getRoomEnterSerial = _this.getRoomEnterSerial.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"setValue\",\n    value: function setValue(field, value) {\n      var state = this.state;\n      state[field] = value;\n      this.setState(state);\n    } // test: K7jqkljf7t_mngoLy9edHTQq4\n    // this function will find the serial number for the page to see all seats\n    // once the serve has registered this serial\n\n  }, {\n    key: \"getRoomEnterSerial\",\n    value: function getRoomEnterSerial(callback) {\n      var _this2 = this;\n\n      if (this.state.userID) {\n        var siteForRoomEnteringSerial = this.anatomy.domain + \"/\" + this.anatomy.obtainSeatInfoPath + \"?\" + this.anatomy.roomIDQuery + this.anatomy.firstFloorRoomID + \"&\" + this.anatomy.openIDQuery + this.state.userID + \"&\" + this.anatomy.roomNameQuery + this.anatomy.firstFloorName;\n        fetch(siteForRoomEnteringSerial).then(function (response) {\n          return response.text();\n        }).then(function (response) {\n          console.log(response);\n          var serial = response.split(\"serialNo=\");\n\n          if (serial[1]) {\n            _this2.checkVadility(serial[1], callback);\n          } else {\n            callback(null);\n          }\n        });\n      } else {\n        callback(null);\n      }\n    } // three states\n\n  }, {\n    key: \"checkVadility\",\n    value: function checkVadility(serial, callback) {\n      var _this3 = this;\n\n      var vadilityURL = this.anatomy.domain + \"/\" + this.anatomy.selectSerialPath + \"?\" + this.anatomy.serialQuery + serial;\n      console.log(vadilityURL);\n      fetch(vadilityURL).then(function (response) {\n        return response.text();\n      }).then(function (response) {\n        console.log(response);\n\n        if (response === \"no\") {\n          _this3.checkVadility(serial, callback);\n        } else {\n          callback(serial);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: Main,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/disclaimer\",\n        render: function render(routerProps) {\n          return React.createElement(Disclaimer, Object.assign({}, routerProps, {\n            setValueHandler: _this4.setValueHandler,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/id-collecter\",\n        render: function render(routerProps) {\n          return React.createElement(ReaderIDCollection, Object.assign({}, routerProps, {\n            setValueHandler: _this4.setValueHandler,\n            agree: _this4.state.condition,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/seat-selection\",\n        render: function render(routerProps) {\n          return React.createElement(SeatSelection, Object.assign({}, routerProps, {\n            setValueHandler: _this4.setValueHandler,\n            userID: _this4.state.userID,\n            agree: _this4.state.condition,\n            getRoomEnterSerial: _this4.getRoomEnterSerial,\n            anatomy: _this4.anatomy,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/auto-selection\",\n        render: function render(routerProps) {\n          return React.createElement(AutoSeatSelectionPage, Object.assign({}, routerProps, {\n            userID: _this4.state.userID,\n            setValueHandler: _this4.setValueHandler,\n            agree: _this4.state.condition,\n            anatomy: _this4.anatomy,\n            getRoomEnterSerial: _this4.getRoomEnterSerial,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/HowardPu/Documents/academic/info/info 343/new repo/seat-selection/src/App.js"],"names":["React","Component","HashRouter","Router","Route","Switch","Main","Disclaimer","ReaderIDCollection","SeatSelection","AutoSeatSelectionPage","App","props","state","condition","userID","anatomy","domain","obtainListPath","obtainSeatInfoPath","selectSerialPath","selectJSPPath","reservePath","leavePath","roomIDQuery","roomNameQuery","openIDQuery","serialQuery","yuelanshiIDQuery","showIDQuery","seatNumQuery","firstFloorRoomID","firstFloorName","roomNameUnknown","setValueHandler","setValue","bind","getRoomEnterSerial","field","value","setState","callback","siteForRoomEnteringSerial","fetch","then","response","text","console","log","serial","split","checkVadility","vadilityURL","routerProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\n\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport {Main} from './pages/main';\nimport {Disclaimer} from './pages/disclaimer';\nimport {ReaderIDCollection} from './pages/idCollection';\nimport {SeatSelection} from './pages/SeatSelection';\nimport {AutoSeatSelectionPage} from './pages/SeatSelection';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      condition: false,\n      userID: null\n    }\n    \n    this.anatomy = {\n      domain: \"http://wx.jlcclib.com/wechat\",\n\n      obtainListPath: \"obtainYlist\",\n      obtainSeatInfoPath: \"obtainAllSeatInfo\",\n      selectSerialPath: \"selectSerialNo\",\n      selectJSPPath: \"selectSerialNoToJsp\",\n      reservePath: \"reserve\",\n      leavePath: \"leave\",\n\n      roomIDQuery: \"id=\",\n      roomNameQuery: \"name=\",\n      openIDQuery: \"openId=of_\",\n      serialQuery: \"serialNo=\",\n      yuelanshiIDQuery: \"yuelanshiId=\",\n      showIDQuery: \"id=\",\n      seatNumQuery: \"seatno=\",\n\n      firstFloorRoomID: \"402881b14586df4a014586e28aae0000\",\n      firstFloorName: \"一楼读者自修区\",\n      roomNameUnknown: \"???????\"\n    }\n\n    this.setValueHandler = this.setValue.bind(this);\n\n    this.getRoomEnterSerial = this.getRoomEnterSerial.bind(this);\n  }\n\n  setValue(field, value) {\n    let state = this.state;\n    state[field] = value;\n    this.setState(state);\n  }\n\n  // test: K7jqkljf7t_mngoLy9edHTQq4\n\n  // this function will find the serial number for the page to see all seats\n  // once the serve has registered this serial\n  getRoomEnterSerial(callback) {\n    if(this.state.userID) {\n      let siteForRoomEnteringSerial = this.anatomy.domain + \"/\" + this.anatomy.obtainSeatInfoPath + \"?\" + this.anatomy.roomIDQuery \n                                      + this.anatomy.firstFloorRoomID + \"&\" + this.anatomy.openIDQuery + this.state.userID + \"&\" \n                                      + this.anatomy.roomNameQuery + this.anatomy.firstFloorName;\n      fetch(siteForRoomEnteringSerial).then((response) => {\n        return response.text();\n      }).then((response) => {\n        console.log(response);\n        let serial = response.split(\"serialNo=\");\n        if(serial[1]) {\n          this.checkVadility(serial[1], callback);\n        } else {\n          callback(null);\n        }\n      });\n    } else {\n      callback(null);\n    }\n  }\n\n\n  // three states\n  checkVadility(serial, callback) {\n    let vadilityURL = this.anatomy.domain + \"/\" + this.anatomy.selectSerialPath + \"?\" \n                        + this.anatomy.serialQuery + serial;\n    console.log(vadilityURL);\n    fetch(vadilityURL).then((response) => {\n        return response.text()\n    }).then((response) => {\n        console.log(response);\n        if(response === \"no\") {\n            this.checkVadility(serial, callback);\n        } else {\n            callback(serial);\n        }\n    })\n  }\n\n  render() {\n    return (\n      <Router> \n        <Switch>\n          <Route exact path=\"/\" component={Main} />\n          <Route path=\"/disclaimer\" render={(routerProps) => {\n            return <Disclaimer {...routerProps} setValueHandler={this.setValueHandler}/>;\n          }} />\n          <Route path=\"/id-collecter\" render={(routerProps) => {\n            return <ReaderIDCollection {...routerProps} setValueHandler={this.setValueHandler} agree={this.state.condition}/>;\n          }} />\n          <Route path=\"/seat-selection\" render={(routerProps) => {\n            return <SeatSelection {...routerProps} setValueHandler={this.setValueHandler}  \n                                    userID={this.state.userID} agree={this.state.condition}\n                                    getRoomEnterSerial={this.getRoomEnterSerial} anatomy={this.anatomy}\n            />;\n          }} />\n          <Route path= {\"/auto-selection\"} render={(routerProps) => {\n            return <AutoSeatSelectionPage {...routerProps} \n              userID={this.state.userID} setValueHandler={this.setValueHandler} agree={this.state.condition} \n                      anatomy={this.anatomy} getRoomEnterSerial={this.getRoomEnterSerial}/>\n          }}/>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}